name: Release Please
on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GH_CQ_BOT }}

      - name: Checkout
        uses: actions/checkout@v4
        if: |
          startsWith(github.event.head_commit.message, 'chore(main): Release')
        with:
          fetch-depth: 0

      - name: Configure Git
        if: |
          startsWith(github.event.head_commit.message, 'chore(main): Release')
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        if: |
          startsWith(github.event.head_commit.message, 'chore(main): Release')
        uses: azure/setup-helm@v4
        with:
          version: v3.8.1

      - name: Helm Deps
        if: |
          startsWith(github.event.head_commit.message, 'chore(main): Release')
        run: |
          helm repo add secrets-store-csi-driver https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Run chart-releaser
        if: |
          startsWith(github.event.head_commit.message, 'chore(main): Release')
        uses: helm/chart-releaser-action@v1.7.0
        with:
          skip_existing: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Get PR data
        uses: actions/github-script@v7
        if: |
          startsWith(github.event.head_commit.message, 'chore(main): Release')
        id: get_pr_data
        with:
          script: |
            return (
              await github.rest.repos.listPullRequestsAssociatedWithCommit({
                commit_sha: context.sha,
                owner: context.repo.owner,
                repo: context.repo.repo,
              })
            ).data[0];

      - name: Update PR labels
        uses: actions/github-script@v7
        if: |
          startsWith(github.event.head_commit.message, 'chore(main): Release')
        with:
          script: |
            const prNumber = ${{ fromJson(steps.get_pr_data.outputs.result).number }};

            // Remove the pending label
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              name: 'autorelease: pending'
            });

            // Add the tagged label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              labels: ['autorelease: tagged']
            });
