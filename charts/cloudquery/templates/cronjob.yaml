apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "cloudquery.fullname" . }}-cron
  labels:
  {{- include "cloudquery.labels" . | nindent 4 }}
spec:
  schedule: "{{ .Values.schedule }}"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
          {{- include "cloudquery.selectorLabels" . | nindent 12 }}
        spec:
          {{- if .Values.serviceAccount.enabled }}
          serviceAccountName: {{ include "cloudquery.serviceAccountName" . }}
          {{- end }}
          containers:
            - name: cloudquery
              env:
              - name: CQ_INSTALL_SRC
                value: "{{ .Values.cqInstallSrc | default "HELM" }}"
              envFrom:
              - secretRef:
                  {{- if .Values.secretRef}}
                  name: {{ .Values.secretRef }}
                  {{- else}}
                  name: {{ include "cloudquery.fullname" . }}-secret                
                  {{- end}}
              image: "{{ include "cloudquery.image" . }}"
              imagePullPolicy: Always
              args: ["fetch", "--config", "/app/config/cloudquery.yml", "--enable-console-log", "--encode-json"]
              resources:
              {{- toYaml .Values.resources | nindent 16 }}
              volumeMounts:
              {{- if .Values.volumeMounts }}
              {{- toYaml .Values.volumeMounts | nindent 14 }}
              {{- end }}
              - name: config
                mountPath: /app/config
          volumes:
          {{- if .Values.volumes }}
          {{- toYaml .Values.volumes | nindent 10 }}
          {{- end }}
          - name: config
            configMap:
              name: {{ include "cloudquery.fullname" . }}-config
              items:
              - key: cloudquery.yml
                path: cloudquery.yml
          restartPolicy: Never
