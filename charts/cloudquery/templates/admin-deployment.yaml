apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudquery.fullname" . }}-admin
  labels:
  {{- include "cloudquery.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "cloudquery.selectorLabels" . | nindent 8 }}
  template:
    metadata:
      labels:
      {{- include "cloudquery.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "cloudquery.serviceAccountName" . }}
      {{- end }}
      containers:
        - name: cloudquery
          env:
          - name: CQ_INSTALL_SRC
            value: "{{ .Values.cqInstallSrc | default "HELM" }}"
          envFrom:
          - secretRef:
              name: {{ include "cloudquery.fullname" . }}-secret
          image: "{{ include "cloudquery.image" . }}"
          imagePullPolicy: Always
          command: ["/bin/sh"]
          # we want users to be able to exec into this pod and be able to debug and investigate cloudquery binary, envs and runtime
          args: ["-c", "echo admin container is running. run 'kubectl exec -it deploy/cloudquery-admin -- /bin/sh' to debug; while true; do sleep 10000; done"]
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if .Values.volumeMounts }}
          {{- toYaml .Values.volumeMounts | nindent 10 }}
          {{- end }}
          - name: config
            mountPath: /app/config
      volumes:
      {{- if .Values.volumes }}
      {{- toYaml .Values.volumes | nindent 6 }}
      {{- end }}
      - name: config
        configMap:
          name: {{ include "cloudquery.fullname" . }}-config
          items:
          - key: cloudquery.yml
            path: cloudquery.yml
