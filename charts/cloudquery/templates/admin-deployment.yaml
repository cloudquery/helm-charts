{{- if .Values.admin.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudquery.fullname" . }}-admin
  labels:
  {{- include "cloudquery.labels" . | nindent 4 }}
  {{- include "cloudquery.annotations" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "cloudquery.selectorLabels" . | nindent 8 }}
  template:
    metadata:
      labels:
      {{- include "cloudquery.labels" . | nindent 8 }}
      {{- if .Values.deploymentAnnotations }}
      annotations:
      {{- toYaml .Values.deploymentAnnotations | nindent 8 }}
      {{- end }}
    spec:
      {{- if ne (include "cloudquery.serviceAccountName" .) "default" }}
      serviceAccountName: {{ include "cloudquery.serviceAccountName" . }}
      {{- end }}
      {{- if .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: cloudquery
          env:
          - name: CQ_INSTALL_SRC
            value: "{{ .Values.cqInstallSrc | default "HELM" }}"
          envFrom:
          - secretRef:
              {{- if .Values.secretRef}}
              name: {{ .Values.secretRef }}
              {{- else}}
              name: {{ include "cloudquery.fullname" . }}-secret
              {{- end}}
          image: "{{ include "cloudquery.image" . }}"
          imagePullPolicy: Always
          command: ["/bin/sh"]
          # we want users to be able to exec into this pod and be able to debug and investigate cloudquery binary, envs and runtime
          args: ["-c", "echo admin container is running. run 'kubectl exec -it deploy/cloudquery-admin -- /bin/sh' to debug; while true; do sleep 10000; done"]
          resources:
          {{- toYaml .Values.resources.admin | nindent 12 }}
          volumeMounts:
          {{- if .Values.volumeMounts }}
          {{- toYaml .Values.volumeMounts | nindent 10 }}
          {{- end }}
          - name: config
            mountPath: /app/config
          {{- if .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.volumes }}
      {{- toYaml .Values.volumes | nindent 6 }}
      {{- end }}
      - name: config
        configMap:
          name: {{ include "cloudquery.fullname" . }}-config
          items:
          - key: cloudquery.yml
            path: cloudquery.yml
{{- end }}
