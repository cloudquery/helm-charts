# -- Partially override common.names.fullname template (will maintain the release name)
nameOverride: ""
fullnameOverride: ""

image:
  registry: ghcr.io
  repository: cloudquery/cloudquery
  # Overrides the image tag whose default is the chart appVersion
  # tag: "0.22"
  pullPolicy: IfNotPresent

securityContext:
  enabled: true
  fsGroup: 1001

containerSecurityContext:
  enabled: true
  runAsUser: 1001

# -- Pod Service Account
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- Enable service account (Note: Service Account will only be automatically created if `serviceAccount.name` is not set)
  enabled: false
  # -- Name of an already existing service account. Setting this value disables the automatic service account creation
  name: ""
  # -- Auto-mount the service account token in the pod
  autoMount: false
  # -- Additional custom annotations for the ServiceAccount
  # to associate an AWS IAM role with service-account you need to add the following annotations. For more info checkout: https://docs.aws.amazon.com/eks/latest/userguide/specify-service-account-role.html
  # eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/ROLE
  annotations: {}

# -- Sensible environment variables that will be rendered as new secret object
# This can be useful for auth tokens, etc
# Make sure not to commit sensitive values to git!! Better use AWS Secret manager (or any other)
envRenderSecret: {}
#  CQ_VAR_DSN: "postgres://postgres:pass@cloudquery-postgresql:5432/postgres?sslmode=disable"

  # For AWS see https://docs.cloudquery.io/docs/getting-started/getting-started-with-aws
  # AWS_ACCESS_KEY_ID: ""
  # AWS_SECRET_ACCESS_KEY: ""
  # AWS_SESSION_TOKEN: ""

  # For GCP see https://docs.cloudquery.io/docs/getting-started/getting-started-with-gcp
  # GOOGLE_APPLICATION_CREDENTIALS: ""

  # For Azure see https://docs.cloudquery.io/docs/getting-started/getting-started-with-azure
  # AZURE_TENANT_ID: ""
  # AZURE_CLIENT_ID: ""
  # AZURE_CLIENT_SECRET: ""

  # For any other provider checkout https://hub.cloudquery.io/providers

# -- Schedule fetch time Every day at 00:00.
# More information at: https://crontab.guru/#0_0_*_*_*
schedule: "0 0 * * *"

# Enable cloudwatch logs when deployed on EKS
cloudwatch:
  enabled: false
  cluster_name: cloudquery-complete-example
  region: us-east-1
  # Service account ARN with CloudWatchAgentServerPolicy role to be able to create and write to the logs
  role_arn: "arn:aws:iam::xxxxxxx:role/cloudquery-complete-example-eksa-irsa-cloudwatch"

# -- CloudQuery config.hcl content
# @default -- The chart will use a default CloudQuery aws config
config: |
  // Configuration AutoGenerated by CloudQuery CLI
  // This is a default config.hcl for cloudquery with aws provider.
  // Change this to the needed config.hcl
  cloudquery {
    plugin_directory = "./cq/providers"
    policy_directory = "./cq/policies"

    provider "aws" {
      version = "latest"
    }

    connection {
      dsn = "${DSN}"
    }
  }

  // All Provider Configurations

  provider "aws" {
    configuration {
      // Optional. if you want to assume role to multiple account and fetch data from them
      // accounts "<UNIQUE ACCOUNT IDENTIFIER>" {
      // Optional. Role ARN we want to assume when accessing this account
      // role_arn = < YOUR_ROLE_ARN >
      // Optional. Named profile in config or credential file from where CQ should grab credentials
      // LocalProfile = < PROFILE_NAME >
      // }
      // Optional. by default assumes all regions
      // regions = ["us-east-1", "us-west-2"]
      // Optional. Enable AWS SDK debug logging.
      aws_debug = false
      // The maximum number of times that a request will be retried for failures. Defaults to 5 retry attempts.
      // max_retries = 5
      // The maximum back off delay between attempts. The backoff delays exponentially with a jitter based on the number of attempts. Defaults to 60 seconds.
      // max_backoff = 30
    }

    // list of resources to fetch
    resources = [
      "*"
    ]
  }

# resources:
#   requests:
#     memory: 1024Mi
#     cpu: 1000m
