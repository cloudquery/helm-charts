apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "platform.fullName" . }}
  labels:
    {{- include "platform.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "platform.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "platform.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "platform.serviceAccount" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          image: "{{ include "platform.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if index .Values "externalSecrets" "enabled" }}
            - name: CQAPI_DB_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "platform.fullName" . }}-external-secrets
                  key: postgresqlDSN
            - name: CQAPI_LOCAL_ACTIVATION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "platform.fullName" . }}-external-secrets
                  key: activationKey
            - name: CQAPI_WAREHOUSE_CLICKHOUSE_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "platform.fullName" . }}-external-secrets
                  key: clickhouseDSN
            {{- else }}
            - name: CQAPI_DB_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "platform.fullName" . }}-secrets
                  key: postgresqlDSN
            {{- if .Values.activationKey }}
            - name: CQAPI_LOCAL_ACTIVATION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "platform.fullName" . }}-secrets
                  key: activationKey
            {{- end }}
            - name: CQAPI_WAREHOUSE_CLICKHOUSE_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "platform.fullName" . }}-secrets
                  key: clickhouseDSN
            {{- end }}
            - name: CQAPI_LOCAL_AES_KEY_FILE
              value: "/shared/encrypted_aes_key.bin"
            - name: CQAPI_LOCAL_JWT_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "platform.fullName" . }}-secrets
                  key: jwtPrivateKey
            # todo: figure out if we want this to go through the proxy / update once resolver is fixed
            - name: CQAPI_STORAGE_LOCAL_RELEASE_BASE_URL
              value: "http://{{ include "platform.fullName" . }}.{{ .Release.Namespace }}:{{ .Values.service.proxyPort }}/storage/development/files"
            {{- if .Values.scheduler.address }}
            - name: CQAPI_MANAGEDSYNC_BACKEND_URL
              value: "{{ .Values.scheduler.address }}"
            - name: CQAPI_MANAGEDSYNC_PLATFORM_URL
              value: "http://{{ include "platform.fullName" . }}.{{ .Release.Namespace }}:{{ .Values.service.proxyPort }}/api"
            {{- end}}
          ports:
            - name: proxy
              containerPort: {{ .Values.service.proxyPort }}
              protocol: TCP
            - name: ui
              containerPort: {{ .Values.service.uiPort }}
              protocol: TCP
            - name: api
              containerPort: {{ .Values.service.apiPort }}
              protocol: TCP
            - name: storage
              containerPort: {{ .Values.service.storagePort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          - name: shared
            mountPath: /shared
      volumes:
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      - name: shared
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
