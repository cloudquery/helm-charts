apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-pg-init
spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: pg-init
          image: postgres:15
          env:
            - name: PGHOST
              value: {{ .Values.postgres.host | quote }}
            - name: PGPORT
              value: {{ .Values.postgres.port | quote }}
            - name: PGUSER
              value: {{ .Values.postgres.user | quote }}
            - name: PGPASSWORD
              value: {{ .Values.postgres.password | quote }}
            - name: PGSSLMODE
              value: {{ .Values.postgres.sslmode | quote }}
            - name: TENANT_NAME
              value: "tenant_{{ .Values.tenant.id }}"
            - name: TENANT_PASSWORD
              value: {{ .Values.tenant.postgresPassword | quote }}
          command:
            - /bin/sh
            - -c
            - |
              set -e
              echo "Starting tenant initialization..."
              
              # Create tenant database
              echo "Creating database $TENANT_NAME..."
              psql postgres <<EOF
              CREATE DATABASE $TENANT_NAME;
              EOF
              
              # Create tenant user and grant permissions
              echo "Creating user $TENANT_NAME..."
              psql postgres <<EOF
              -- Create user if not exists
              DO \$\$
              BEGIN
                IF NOT EXISTS (SELECT FROM pg_roles WHERE rolname = '$TENANT_NAME') THEN
                  CREATE USER $TENANT_NAME WITH PASSWORD '$TENANT_PASSWORD';
                END IF;
              END
              \$\$;
              
              -- Grant permissions
              GRANT CONNECT ON DATABASE $TENANT_NAME TO $TENANT_NAME;
              EOF
              
              # Switch to tenant database and set up permissions
              echo "Setting up permissions..."
              psql $TENANT_NAME <<EOF
              GRANT ALL PRIVILEGES ON SCHEMA public TO $TENANT_NAME;
              ALTER DEFAULT PRIVILEGES IN SCHEMA public 
                GRANT ALL PRIVILEGES ON TABLES TO $TENANT_NAME;
              EOF


              echo "Database:"
              psql -c "SELECT datname FROM pg_database WHERE datname = '$TENANT_NAME';"

              echo "User:"
              psql -c "SELECT rolname, rolsuper FROM pg_roles WHERE rolname = '$TENANT_NAME';"

              echo "Tenant initialization completed!"